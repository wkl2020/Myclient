CREATE TABLE IF NOT EXISTS "VIDEOS_RAW" ("_id" INTEGER, "REF_ID" TEXT NOT NULL UNIQUE, "LANGUAGE_ID" INTEGER NOT NULL, "STREAM_ID" INTEGER, "PROGRAM_ID" TEXT, "TYPE" TEXT, "TITLE" TEXT, "TEXT" TEXT, "SUBTITLE" TEXT, "DURATION" INTEGER, "THUMBNAIL_URL" TEXT, "POSITION" INTEGER, "DATE" LONG, "RIGHTS_AFTER" LONG, "RIGHTS_UNTIL" LONG, "ADULT" BOOLEAN, "WARNING" BOOLEAN, "VIDEO_VIEWS" INTEGER, "RATING" FLOAT, "RECOMMENDED" BOOLEAN, "PLUS7_TEASER" TEXT, "RANK" INTEGER, "GEO_BLOCKING" TEXT, "ISO_LANG" TEXT, "WATCH_POSITION" INTEGER DEFAULT 0, "UPDATED" INTEGER DEFAULT 0, PRIMARY KEY ("_id", "REF_ID", "LANGUAGE_ID"));
CREATE TABLE IF NOT EXISTS "VIDEO_SOURCES" ("_id" INTEGER, VS_ID INTEGER NOT NULL UNIQUE, "VIDEO_ID" TEXT, "LANGUAGE_ID" INTEGER NOT NULL, "VIDEO_TYPE" TEXT, "STREAM_URL" TEXT, "MAP_KEY" TEXT, "VERSION_PROG" INTEGER,"VERSION_CODE" TEXT, "LABEL" TEXT, "VIDEO_FORMAT" TEXT, PRIMARY KEY ("_id", "VIDEO_ID", "LANGUAGE_ID", "VERSION_CODE"));
CREATE TABLE IF NOT EXISTS "GENRES" ("_id" INTEGER, "CODE" TEXT NOT NULL UNIQUE, "LANGUAGE_ID" INTEGER NOT NULL, "FILTERABLE" BOOLEAN, "LABEL" TEXT, "FETCHED" DATE, PRIMARY KEY ("_id", "CODE", "LANGUAGE_ID"));
CREATE TABLE IF NOT EXISTS "CLUSTERS" ("_id" INTEGER, "CLUSTER_ID" INTEGER NOT NULL UNIQUE, "LANGUAGE_ID" INTEGER NOT NULL, "TYPE" TEXT, "DISABLED" BOOLEAN, "TITLE" TEXT, "SUBTITLE" TEXT, "MOBILE" BOOLEAN, "HASHTAG" TEXT, "AT" TEXT, "IMAGE_URL" TEXT, "DOSSIER_URL" TEXT, "HIDDEN" BOOLEAN, "FETCHED" DATE, PRIMARY KEY ("_id", "CLUSTER_ID", "LANGUAGE_ID"));
CREATE TABLE IF NOT EXISTS "PROGRAMS" ("_id" INTEGER, "PROGRAM_ID" TEXT NOT NULL UNIQUE, "LANGUAGE_ID" INTEGER NOT NULL, "FETCHED" DATE, "ADDITIONAL_TEXT" TEXT, "AGE_RESTRICTION" TEXT,  "DIRECTOR" TEXT, "DOSSIER_URL" TEXT, "HEADLINE" TEXT, "LIVESTREAM_ALLOWED" BOOLEAN, "LONG_TEXT" TEXT, "ORIGINAL_LANGUAGE" TEXT, "ORIGINAL_TITLE" TEXT, "PRODUCTION_COUNTRY" TEXT, "PRODUCTION_YEAR" TEXT,"PROGRAM_URL" TEXT, "SHORT_TEXT" TEXT, "SUBTITLE" TEXT, "TITLE" TEXT NOT NULL, "DEFAULT_IMAGE_ID" INTEGER, "DEFAULT_VIDEO_ID" INTEGER, "GENRE_ID" TEXT, PRIMARY KEY ("_id", "PROGRAM_ID", "LANGUAGE_ID"));
CREATE TABLE IF NOT EXISTS "CHANNELS" ("_id" INTEGER, "CHANNEL_ID" INTEGER NOT NULL UNIQUE, "LANGUAGE_ID" INTEGER NOT NULL, "VIDEO_REF_ID" TEXT, "LABEL" TEXT, "MOBILE" BOOLEAN INTEGER, "CHANNEL_REF_ID" INTEGER, "FETCHED" TEXT, PRIMARY KEY ("_id", "CHANNEL_ID", "LANGUAGE_ID"));
CREATE TABLE IF NOT EXISTS "BROADCASTS" ("_id" INTEGER, "BROADCAST_ID" TEXT NOT NULL UNIQUE, "LANGUAGE_ID" INTEGER NOT NULL, "PROGRAM_ID" TEXT, "DAYS_IN_ARTE7" INTEGER, "BROADCAST_DURATION" INTEGER, "PICTURE_FORMAT" TEXT, "AUDIO_DESCRIPTION" BOOLEAN, "ORIGIN" TEXT, "PICTURE_HD" BOOLEAN, "AUDIO_FORMAT" TEXT, "BROADCAST_VERSION" TEXT, "CLOSED_CAPTIONING" BOOLEAN, "AIR_DATE" TEXT, "AIR_TIME" TEXT, "BROADCAST_TIMESTAMP" INTEGER, "DATE_TIME" TEXT, "FETCHED" DATE, "MAIN_CLUSTER_ID" INTEGER, "BROADCAST_TYPE" TEXT, "PRIME_TIME" BOOLEAN, PRIMARY KEY ("_id", "BROADCAST_ID", "LANGUAGE_ID"), FOREIGN KEY("PROGRAM_ID") REFERENCES PROGRAMS("PROGRAM_ID") ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS "IMAGES" ("_id" INTEGER, "IMAGE_ID" INTEGER NOT NULL UNIQUE, "LANGUAGE_ID" INTEGER NOT NULL, "CAPTION" TEXT, "COPYRIGHT" TEXT, "DEFAULT_IMAGE" TEXT, "URL" TEXT, "PROGRAM_ID" INTEGER, PRIMARY KEY ("_id", "IMAGE_ID", "LANGUAGE_ID"));

CREATE TABLE IF NOT EXISTS "SCHEDULES" ("_id" INTEGER, "LANGUAGE_ID" INTEGER NOT NULL, "SCHEDULE_DAY" DATE, "FETCHED" DATE, PRIMARY KEY ("_id", "LANGUAGE_ID"));
CREATE TABLE IF NOT EXISTS "CASTCREWS" ("_id" INTEGER, "LANGUAGE_ID" INTEGER NOT NULL, CC_ID NOT NULL UNIQUE, "NAME" TEXT, "POSITION" TEXT, "ROLE" TEXT, "TYPE" TEXT, "TYPE_CODE" TEXT, "PROGRAM_ID" INTEGER, PRIMARY KEY ("_id", "LANGUAGE_ID"));
CREATE TABLE IF NOT EXISTS "VIDEO_CHANNEL" ("_id" INTEGER, VC_ID INTEGER NOT NULL UNIQUE,  "LANGUAGE_ID" INTEGER NOT NULL, "VIDEO_ID" TEXT, "CHANNEL_ID" TEXT, PRIMARY KEY ("_id", "LANGUAGE_ID", "VIDEO_ID", "CHANNEL_ID"));

CREATE TABLE IF NOT EXISTS "LANGUAGES" ("_id" INTEGER PRIMARY KEY AUTOINCREMENT, "NAME" INTEGER, "DEFAULT" BOOLEAN);
INSERT OR replace INTO "LANGUAGES" VALUES(0,'GERMAN', 'TRUE');
INSERT OR replace INTO "LANGUAGES" VALUES(1,'FRENCH', 'FALSE');

CREATE TABLE IF NOT EXISTS "FAVOURITES" ("_id" INTEGER, "LANGUAGE_ID" INTEGER NOT NULL, "PROGRAM_ID" TEXT, "REF_ID" INTEGER, "WATCH_POSITION" INTEGER DEFAULT 0, "SUBSCRIBE_CLUSTER_ID" TEXT, PRIMARY KEY ("_id", "REF_ID", "LANGUAGE_ID"));

-- // VIEWS
CREATE VIEW IF NOT EXISTS "VIDEOS" AS SELECT VIDEOS_RAW._id as _id, VIDEOS_RAW.REF_ID, VIDEOS_RAW.LANGUAGE_ID, VIDEOS_RAW.STREAM_ID, VIDEOS_RAW.PROGRAM_ID, VIDEOS_RAW.TYPE, VIDEOS_RAW.TITLE, VIDEOS_RAW.TEXT, VIDEOS_RAW.SUBTITLE, VIDEOS_RAW.DURATION, VIDEOS_RAW.THUMBNAIL_URL, VIDEOS_RAW.POSITION, VIDEOS_RAW.DATE, VIDEOS_RAW.RIGHTS_AFTER, VIDEOS_RAW.RIGHTS_UNTIL, VIDEOS_RAW.ADULT, VIDEOS_RAW.WARNING, VIDEOS_RAW.VIDEO_VIEWS, VIDEOS_RAW.RATING, VIDEOS_RAW.RECOMMENDED, VIDEOS_RAW.PLUS7_TEASER, VIDEOS_RAW.RANK, VIDEOS_RAW.GEO_BLOCKING, VIDEOS_RAW.ISO_LANG, VIDEOS_RAW.WATCH_POSITION, PROGRAMS.TITLE AS PROGRAM_TITLE FROM VIDEOS_RAW OUTER LEFT JOIN PROGRAMS ON VIDEOS_RAW.PROGRAM_ID = PROGRAMS.PROGRAM_ID AND VIDEOS_RAW.LANGUAGE_ID = PROGRAMS.LANGUAGE_ID;

CREATE VIEW IF NOT EXISTS "PROGRAMS_SEARCH_RESULT" AS SELECT PROGRAMS._ID, PROGRAMS.TITLE, PROGRAMS.PROGRAM_ID, VIDEOS.TYPE, VIDEOS.DURATION, VIDEOS.VIDEO_VIEWS, VIDEOS.RIGHTS_AFTER, VIDEOS.RIGHTS_UNTIL, VIDEOS.THUMBNAIL_URL, PROGRAMS.LANGUAGE_ID FROM PROGRAMS INNER JOIN VIDEOS ON PROGRAMS.DEFAULT_VIDEO_ID = VIDEOS.REF_ID;

CREATE VIEW IF NOT EXISTS "TV_GUIDE" AS SELECT BROADCASTS._id, BROADCASTS.PROGRAM_ID, PROGRAMS.TITLE, PROGRAMS.PROGRAM_ID, BROADCASTS.LANGUAGE_ID, BROADCASTS.BROADCAST_TIMESTAMP, BROADCASTS.PRIME_TIME, BROADCASTS.AIR_DATE, BROADCASTS.AIR_TIME, BROADCASTS.DAYS_IN_ARTE7, PROGRAMS.DEFAULT_IMAGE_ID, GENRES.CODE, GENRES.LABEL,  BROADCASTS.MAIN_CLUSTER_ID, PROGRAMS.DEFAULT_IMAGE_ID, IMAGES.URL, BROADCASTS.BROADCAST_TIMESTAMP FROM BROADCASTS INNER JOIN PROGRAMS ON BROADCASTS.PROGRAM_ID = PROGRAMS.PROGRAM_ID AND BROADCASTS.LANGUAGE_ID = PROGRAMS.LANGUAGE_ID OUTER LEFT JOIN GENRES ON PROGRAMS.GENRE_ID = GENRES.CODE OUTER LEFT JOIN IMAGES ON PROGRAMS.DEFAULT_IMAGE_ID = IMAGES.IMAGE_ID ORDER BY BROADCASTS.BROADCAST_TIMESTAMP ASC;

--CREATE VIEW IF NOT EXISTS "TV_GUIDE" AS SELECT DISTINCT BROADCASTS.PROGRAM_ID, PROGRAMS.TITLE, PROGRAMS.PROGRAM_ID, BROADCASTS.LANGUAGE_ID, BROADCASTS.BROADCAST_TIMESTAMP, BROADCASTS.AIR_DATE, BROADCASTS.AIR_TIME, BROADCASTS.DAYS_IN_ARTE7, GENRES.LABEL, IMAGES.URL, CLUSTERS.CLUSTER_ID FROM BROADCASTS INNER JOIN PROGRAMS ON BROADCASTS.PROGRAM_ID = PROGRAMS.PROGRAM_ID INNER JOIN GENRES ON PROGRAMS.GENRE_ID = GENRES.CODE INNER JOIN IMAGES ON PROGRAMS.DEFAULT_IMAGE_ID = IMAGES.IMAGE_ID INNER JOIN CLUSTERS ON BROADCASTS.MAIN_CLUSTER_ID = CLUSTERS.CLUSTER_ID ORDER BY BROADCASTS.AIR_DATE, BROADCASTS.AIR_TIME ASC;

CREATE VIEW IF NOT EXISTS "VIDEOS_BY_CLUSTER" AS SELECT DISTINCT VIDEOS._id, BROADCASTS.PROGRAM_ID, VIDEOS.TITLE, VIDEOS.TYPE, VIDEOS.THUMBNAIL_URL, VIDEOS.DURATION, VIDEOS.VIDEO_VIEWS, VIDEOS.RIGHTS_AFTER, VIDEOS.RIGHTS_UNTIL, CLUSTERS.TITLE AS CLUSTER, PROGRAMS.LANGUAGE_ID FROM BROADCASTS LEFT OUTER JOIN PROGRAMS ON BROADCASTS.PROGRAM_ID = PROGRAMS.PROGRAM_ID AND BROADCASTS.LANGUAGE_ID = PROGRAMS.LANGUAGE_ID INNER JOIN VIDEOS ON VIDEOS.PROGRAM_ID = PROGRAMS.PROGRAM_ID AND VIDEOS.LANGUAGE_ID = PROGRAMS.LANGUAGE_ID INNER JOIN CLUSTERS ON BROADCASTS.MAIN_CLUSTER_ID = CLUSTERS.CLUSTER_ID ORDER BY VIDEOS.TITLE ASC;
CREATE VIEW IF NOT EXISTS "VIDEOS_BY_CHANNEL" AS SELECT DISTINCT VIDEOS._id, VIDEOS.TITLE, VIDEOS.TYPE, VIDEOS.THUMBNAIL_URL, VIDEOS.DURATION, VIDEOS.VIDEO_VIEWS, VIDEOS.RIGHTS_AFTER, VIDEOS.RIGHTS_UNTIL, VIDEO_CHANNEL.CHANNEL_ID, VIDEOS.PROGRAM_ID, VIDEO_CHANNEL.LANGUAGE_ID FROM VIDEOS INNER JOIN VIDEO_CHANNEL ON VIDEO_CHANNEL.VIDEO_ID = VIDEOS.REF_ID ORDER BY VIDEOS.TITLE ASC;

CREATE VIEW IF NOT EXISTS "CLUSTERS_WITH_VIDEO" AS SELECT DISTINCT CLUSTERS._id, CLUSTERS.TITLE, CLUSTERS.CLUSTER_ID, CLUSTERS.IMAGE_URL, VIDEOS.LANGUAGE_ID FROM BROADCASTS INNER JOIN PROGRAMS ON BROADCASTS.PROGRAM_ID = PROGRAMS.PROGRAM_ID AND BROADCASTS.LANGUAGE_ID = PROGRAMS.LANGUAGE_ID INNER JOIN VIDEOS ON VIDEOS.PROGRAM_ID = PROGRAMS.PROGRAM_ID AND VIDEOS.LANGUAGE_ID = PROGRAMS.LANGUAGE_ID INNER JOIN CLUSTERS ON BROADCASTS.MAIN_CLUSTER_ID = CLUSTERS.CLUSTER_ID ORDER BY CLUSTERS.TITLE ASC;
CREATE VIEW IF NOT EXISTS "GENRES_WITH_VIDEO" AS SELECT DISTINCT GENRES._id, GENRES.LABEL, GENRES.CODE, PROGRAMS.LANGUAGE_ID FROM PROGRAMS INNER JOIN VIDEOS ON VIDEOS.PROGRAM_ID = PROGRAMS.PROGRAM_ID AND VIDEOS.LANGUAGE_ID = PROGRAMS.LANGUAGE_ID INNER JOIN GENRES ON PROGRAMS.GENRE_ID = GENRES.CODE ORDER BY GENRES.LABEL ASC;
CREATE VIEW IF NOT EXISTS "CHANNELS_WITH_VIDEO" AS SELECT DISTINCT CHANNELS._id, CHANNELS.LABEL, CHANNELS.CHANNEL_ID, CHANNELS.VIDEO_REF_ID, CHANNELS.MOBILE, CHANNELS.LANGUAGE_ID FROM CHANNELS INNER JOIN VIDEOS ON CHANNELS.VIDEO_REF_ID = VIDEOS.REF_ID;

CREATE VIEW IF NOT EXISTS "FAVOURITES_LATEST" AS SELECT DISTINCT FAVOURITES._id, PROGRAMS.TITLE, PROGRAMS.SUBTITLE, PROGRAMS.PROGRAM_ID, PROGRAMS.LANGUAGE_ID, FAVOURITES.WATCH_POSITION, BROADCASTS.DAYS_IN_ARTE7, GENRES.LABEL, IMAGES.URL, CLUSTERS.CLUSTER_ID FROM FAVOURITES INNER JOIN PROGRAMS ON FAVOURITES.PROGRAM_ID = PROGRAMS.PROGRAM_ID AND FAVOURITES.LANGUAGE_ID = PROGRAMS.LANGUAGE_ID LEFT OUTER JOIN BROADCASTS ON FAVOURITES.PROGRAM_ID = BROADCASTS.PROGRAM_ID AND FAVOURITES.LANGUAGE_ID = BROADCASTS.LANGUAGE_ID LEFT OUTER JOIN GENRES ON PROGRAMS.GENRE_ID = GENRES.CODE LEFT OUTER JOIN IMAGES ON PROGRAMS.DEFAULT_IMAGE_ID = IMAGES.IMAGE_ID LEFT OUTER JOIN CLUSTERS ON BROADCASTS.MAIN_CLUSTER_ID = CLUSTERS.CLUSTER_ID ORDER BY BROADCASTS.BROADCAST_TIMESTAMP ASC;
CREATE VIEW IF NOT EXISTS "ALREADY_WATCHED" AS SELECT DISTINCT VIDEOS_RAW._id, PROGRAMS.TITLE, PROGRAMS.SUBTITLE, PROGRAMS.PROGRAM_ID, PROGRAMS.LANGUAGE_ID, VIDEOS_RAW.WATCH_POSITION, BROADCASTS.DAYS_IN_ARTE7, GENRES.LABEL, IMAGES.URL, CLUSTERS.CLUSTER_ID, VIDEOS_RAW.UPDATED FROM VIDEOS_RAW INNER JOIN PROGRAMS ON VIDEOS_RAW.PROGRAM_ID = PROGRAMS.PROGRAM_ID AND VIDEOS_RAW.LANGUAGE_ID = PROGRAMS.LANGUAGE_ID LEFT OUTER JOIN BROADCASTS ON VIDEOS_RAW.PROGRAM_ID = BROADCASTS.PROGRAM_ID AND VIDEOS_RAW.LANGUAGE_ID = BROADCASTS.LANGUAGE_ID LEFT OUTER JOIN GENRES ON PROGRAMS.GENRE_ID = GENRES.CODE OUTER LEFT JOIN IMAGES ON PROGRAMS.DEFAULT_IMAGE_ID = IMAGES.IMAGE_ID LEFT OUTER JOIN CLUSTERS ON BROADCASTS.MAIN_CLUSTER_ID = CLUSTERS.CLUSTER_ID WHERE VIDEOS_RAW.TYPE = "ARTE_PLUS_SEVEN" ORDER BY VIDEOS_RAW.UPDATED ASC;
CREATE VIEW IF NOT EXISTS "SUBSCRIPTIONS" AS SELECT DISTINCT CLUSTERS._id, CLUSTERS.TITLE, CLUSTERS.SUBTITLE, CLUSTERS.IMAGE_URL, CLUSTERS.LANGUAGE_ID, CLUSTERS.CLUSTER_ID, FAVOURITES.SUBSCRIBE_CLUSTER_ID FROM CLUSTERS OUTER LEFT JOIN FAVOURITES ON FAVOURITES.SUBSCRIBE_CLUSTER_ID = CLUSTERS.CLUSTER_ID;
-- \\ VIEWS


-- add Clusters.subtitle
DROP VIEW "VIDEOS_BY_CLUSTER";
CREATE VIEW IF NOT EXISTS "VIDEOS_BY_CLUSTER" AS SELECT DISTINCT VIDEOS._id, BROADCASTS.PROGRAM_ID, VIDEOS.TITLE, VIDEOS.TYPE, VIDEOS.THUMBNAIL_URL, VIDEOS.DURATION, VIDEOS.VIDEO_VIEWS, VIDEOS.RIGHTS_AFTER, VIDEOS.RIGHTS_UNTIL, VIDEOS.GEO_BLOCKING, VIDEOS.GEO_BLOCKING_ORD, VIDEOS.CLUSTER_ID, CLUSTERS.TITLE AS CLUSTER, CLUSTERS.SUBTITLE AS CLUSTER_SUBTITLE, PROGRAMS.LANGUAGE_ID FROM BROADCASTS LEFT OUTER JOIN PROGRAMS ON BROADCASTS.PROGRAM_ID = PROGRAMS.PROGRAM_ID AND BROADCASTS.LANGUAGE_ID = PROGRAMS.LANGUAGE_ID INNER JOIN VIDEOS ON VIDEOS.PROGRAM_ID = PROGRAMS.PROGRAM_ID AND VIDEOS.LANGUAGE_ID = PROGRAMS.LANGUAGE_ID INNER JOIN CLUSTERS ON BROADCASTS.MAIN_CLUSTER_ID = CLUSTERS.CLUSTER_ID ORDER BY VIDEOS.TITLE ASC;
DROP VIEW "CLUSTERS_WITH_VIDEO";
CREATE VIEW IF NOT EXISTS "CLUSTERS_WITH_VIDEO"
    AS SELECT DISTINCT
        CLUSTERS._id,
        CLUSTERS.TITLE,
        CLUSTERS.SUBTITLE,
        CLUSTERS.CLUSTER_ID,
        CLUSTERS.IMAGE_URL,
        VIDEOS.LANGUAGE_ID,
        VIDEOS.GEO_BLOCKING_ORD
    FROM BROADCASTS
        INNER JOIN PROGRAMS
            ON BROADCASTS.PROGRAM_ID = PROGRAMS.PROGRAM_ID
                AND BROADCASTS.LANGUAGE_ID = PROGRAMS.LANGUAGE_ID
        INNER JOIN VIDEOS
            ON VIDEOS.PROGRAM_ID = PROGRAMS.PROGRAM_ID
                AND VIDEOS.LANGUAGE_ID = PROGRAMS.LANGUAGE_ID
        INNER JOIN CLUSTERS
            ON BROADCASTS.MAIN_CLUSTER_ID = CLUSTERS.CLUSTER_ID
    ORDER BY CLUSTERS.TITLE ASC;
